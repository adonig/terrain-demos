sources:
    osm: 
        type: TopoJSON
        url: //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-JUsa0Gc
    elevation:
        type: Raster
        url: https://terrain-preview.mapzen.com/terrarium/{z}/{x}/{y}.png
        max_zoom: 14

styles: 
    hillshade:
        base: raster
        shaders: 
            blocks:
                global: |
                    float unpack(vec4 h) {
                        return (h.r * 1. + h.g / 256. + h.b / 65536.);
                    }
                normal: |
                    // Normal from heightmap
                    // adapted from
                    // http://stackoverflow.com/questions/5281261/generating-a-normal-map-from-a-height-map
                    // http://stackoverflow.com/questions/15178225/normal-map-from-height-map-artifact
                    float px = 1. / 256.;
                    vec3 off = vec3(-px, 0, px);

                    // Sample heightmap at center, left, right, above, below
                    float h11 = unpack(texture2D(u_raster_texture, v_texcoord));
                    float height = h11;
                    float h01 = unpack(texture2D(u_raster_texture, vec2(v_texcoord + off.xy)));
                    float h21 = unpack(texture2D(u_raster_texture, vec2(v_texcoord + off.zy)));
                    float h10 = unpack(texture2D(u_raster_texture, vec2(v_texcoord + off.yx)));
                    float h12 = unpack(texture2D(u_raster_texture, vec2(v_texcoord + off.yz)));

                    // center/right + center/up kernel (sharper)
                    // vec3 va = normalize(vec3(off.z, 0.0, h21 - h11));
                    // vec3 vb = normalize(vec3(0.0, off.z, h12 - h11));
                    // left/right + up/down kernel (softer)
                    vec3 va = normalize(vec3(off.xy*-2.,h21-h01));
                    vec3 vb = normalize(vec3(off.yx*-2.,h12-h10));

                    normal = normalize(cross(va, vb));
                    normal *= 4.; // boost

                color: |
                    color.rgb = normal /2. + .5;

layers:
    terrain:
        data: { source: elevation, layer: _default }
        draw:
            hillshade:
                order: 0

    earth:
        data: { source: osm }
        draw:
            lines: 
                order: 2
                color: [.3, .3, .3]
                width: 1px

    places:
        data: { source: osm}
        filter: 
            kind: [city]
        draw:
            text:
                font:
                    fill: white
                    size: 16px
                    stroke: { color: '#444', width: 4px}
