sources:
    osm: 
        type: TopoJSON
        url: //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-JUsa0Gc
    normals:
        type: Raster
        url: https://s3.amazonaws.com/mapzen-terrain-dev-us-east/normal/{z}/{x}/{y}.png
        max_zoom: 13

styles: 
    hillshade:
        base: raster
        shaders:
            blocks:
                color: |
                    float height = 1. - color.a;
                    color.a = 1.0;
                                        
                    // Color ramps
                    vec3 colors[3];
                    colors[0] = vec3(0.407,0.690,0.487);
                    colors[1] = vec3(0.520,0.274,0.254);
                    colors[2] = vec3(1., 1., 1.);
                    
                    float step1 = 0.032; // bottom
                    float step2 = 0.134;
                    float step3 = 0.154;
                    float step4 = 0.712; // top
                    
                    color.rgb = mix(colors[0], colors[1], smoothstep(step1, step2, height));
                    color.rgb = mix(color.rgb, colors[1], smoothstep(step2, step3, height));
                    color.rgb = mix(color.rgb, colors[2], smoothstep(step3, step4, height));

                    // Dynamic color ramps
                    //color.rgb = ramp[0].rgb;
                    //const int nramps = int(num_ramps);
                    //const int i = 0;
                    //for (int i=0; i < nramps-1; i++) {
                    //color.rgb = mix(color.rgb, ramp[i+1].rgb, smoothstep(ramp[i].a, ramp[i+1].a, height));
                    //}
                    //color.rgb = mix(color.rgb, ramp[nramps-1].rgb, smoothstep(ramp[nramps-1].a, 1., height));

layers:
    terrain:
        data: { source: normals, layer: _default }
        draw:
            hillshade:
                order: 0

    earth:
        data: { source: osm }
        draw:
            lines: 
                order: 2
                color: [.3, .3, .3]
                width: 1px

    places:
        data: { source: osm}
        filter: 
            kind: [city]
        draw:
            text:
                font:
                    fill: white
                    size: 16px
                    stroke: { color: '#444', width: 4px}
